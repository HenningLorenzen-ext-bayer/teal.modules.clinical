% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_abnormality.R
\name{tm_t_abnormality}
\alias{tm_t_abnormality}
\title{This module produces a summary table that includes abnormality counts based
on \code{\link[tern]{t_abnormality}}. For correct results, please use the
filter panel to select only post-baseline records.}
\usage{
tm_t_abnormality(
  label,
  dataname,
  arm_var,
  id_var,
  by_vars,
  grade,
  abnormal,
  baseline,
  exclude_base_abn = FALSE,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{menu item label of the module in the teal app}

\item{dataname}{(\code{character}) analysis data used in teal module, needs
to be available in the list passed to the \code{data} argument of
\code{\link[teal]{init}}.}

\item{arm_var}{\code{\link[teal]{choices_selected}} object with all available
choices and preselected option for variable names that can be used as
\code{arm}}

\item{id_var}{\code{\link[teal]{choices_selected}} object specifying the
variable name for subject id.}

\item{by_vars}{\code{\link[teal]{choices_selected}} object with all available
choices and preselected option for variable names used to split the summary
by rows.}

\item{grade}{\code{\link[teal]{choices_selected}} object with all available
choices and preselected option for variable names that can be used to
specify the abnormality grade. Variable must be factor.}

\item{abnormal}{(\code{vector}) to specify the default preselected values
indicating abnormality grade.}

\item{baseline}{\code{\link[teal]{choices_selected}} object with all
available choices and preselected option for variable names that can be
used to specify the baseline abnormality.}

\item{exclude_base_abn}{(\code{boolean}) to specify the default option in UI
whether to exclude subjects with baseline abnormality in denominator.
Default is \code{FALSE}.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\value{
a \code{\link[teal]{module}} object
}
\description{
This module produces a summary table that includes abnormality counts based
on \code{\link[tern]{t_abnormality}}. For correct results, please use the
filter panel to select only post-baseline records.
}
\examples{
library(random.cdisc.data)
library(dplyr)

ADSL <- radsl(cached = TRUE)
ADLB0 <- radlb(cached = TRUE)
# create BNRIND
ADLB_base <- ADLB0 \%>\%
  dplyr::filter(ABLFL == "Y") \%>\%
  dplyr::select(USUBJID, PARAM, ANRIND) \%>\%
  dplyr::rename(BNRIND = ANRIND)

ADLB <- merge(ADLB0, ADLB_base, by = c("USUBJID", "PARAM")) \%>\%
  var_relabel(
    PARAM = "Parameters",
    BNRIND = "Baseline Reference Range Indicator",
    ANRIND = "Analysis Reference Range Indicator",
    AVISIT = "Analysis Visit"
  )

app <- init(
data = cdisc_data(
  cdisc_dataset("ADSL", ADSL),
  cdisc_dataset("ADLB", ADLB),
  code = 'ADSL <- radsl(cached = TRUE)
         ADLB0 <- radlb(cached = TRUE)
         ADLB_base <- ADLB0 \%>\%
           dplyr::filter(ABLFL == "Y") \%>\%
           dplyr::select(USUBJID, PARAM, ANRIND) \%>\%
           dplyr::rename(BNRIND = ANRIND)
         ADLB <- merge(ADLB0, ADLB_base, by = c("USUBJID", "PARAM")) \%>\%
           var_relabel(
             PARAM = "Parameters",
             ANRIND = "Analysis Reference Range Indicator",
             AVISIT = "Analysis Visit")',
  check = FALSE),
 modules = root_modules(
   tm_t_abnormality(
     label = "Abnormality Table",
     dataname = 'ADLB',
     arm_var = choices_selected(
       choices = variable_choices(ADSL, subset = c("ARM", "ARMCD")),
       selected = "ARM"
     ),
     id_var = choices_selected(
       choices = variable_choices(ADSL, subset = c("USUBJID", "SUBJID")),
       selected = "USUBJID",
       fixed = TRUE
     ),
     by_vars = choices_selected(
       choices = variable_choices(ADLB, subset = c("LBCAT", "PARAM", "AVISIT")),
       selected = c("PARAM", "AVISIT"),
       keep_order = TRUE
     ),
     grade = choices_selected(
       choices = variable_choices(ADLB, subset = "ANRIND"),
       selected = "ANRIND",
       fixed = TRUE
     ),
     abnormal = c("LOW", "HIGH"),
     baseline = choices_selected(
       choices = variable_choices(ADLB, subset = "BNRIND"),
       selected = "BNRIND",
       fixed = TRUE
     ),
     exclude_base_abn = FALSE
   )
 )
)

# important to filter out baseline records for table numbers to be correct
app$datasets$hold_filtering()
app$datasets$set_filter_state("ADLB", "ABLFL", "")
app$datasets$set_filter_state("ADLB", "ABLFL2", "")
app$datasets$continue_filtering()

\dontrun{
shinyApp(app$ui, app$server)
}
}
