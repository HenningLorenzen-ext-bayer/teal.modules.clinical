% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_a_mmrm.R
\name{tm_a_mmrm}
\alias{tm_a_mmrm}
\title{Teal module for Mixed Model Repeated Measurements (MMRM) analysis.}
\usage{
tm_a_mmrm(
  label,
  dataname,
  response_var,
  id_var,
  arm_var,
  visit_var,
  covariate_vars,
  arm_ref_comp = NULL,
  paramcd,
  conf_level,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character}) menu item label of the module in the teal app}

\item{dataname}{(\code{character}) analysis data used in teal module, needs to be available in
the list passed to the \code{data} argument of \code{\link[teal]{init}}.
Note that the data is expected to be in vertical form where each subject has
repeated measured at different timepoints. At each visit, there is only one
record for each subject.}

\item{response_var}{\code{\link[teal]{choices_selected}} object with all available choices and preselected option
for numeric variables that can be used as \code{response} variable.}

\item{id_var}{\code{\link[teal]{choices_selected}} object specifying the variable name for subject ID.
(This will be converted to a factor.)}

\item{arm_var}{\code{\link[teal]{choices_selected}} object with all available choices and preselected option
for variable names that can be used as \code{arm} variable. (This will be converted to a factor.)}

\item{visit_var}{\code{\link[teal]{choices_selected}} object with all available choices and preselected option
for variable names that can be used as \code{visit} variable. Must be a factor in \code{dataname}.}

\item{covariate_vars}{\code{\link[teal]{choices_selected}} object with all available choices and preselected option
for variable names and interaction combinations (using \code{A*B} and \code{A:B} notation) that can be used as
\code{covariate} variables. Variables can be numeric or factor.}

\item{arm_ref_comp}{(\code{\link[teal]{choices_selected}}) optional, if specified it must be a named list with each
element corresponding to an arm variable in \code{ADSL} and the element must
be another list with the elements named \code{ref} and \code{comp} that the
defined the default reference and comparison arms when the arm variable is
changed.}

\item{paramcd}{\code{\link[teal]{choices_selected}} object with all available choices and preselected option for
variable names that can be used as \code{PARAMCD} variable (i.e., types of response that can be selected).}

\item{conf_level}{\code{\link[teal]{choices_selected}} object specifying the confidence level (numeric values,
need to be greater than 0 and less than 1).}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Teal module for Mixed Model Repeated Measurements (MMRM) analysis.
}
\details{
This modules expects that the analysis data has the following variables:

\tabular{ll}{
 \code{PARAMCD} \tab variable used to filter for endpoint, after
 filtering for \code{paramcd} one observation per patient per time point is expected
}

The arm, subject ID, and covariate variables are taken from the \code{ADSL} data.
}
\note{
The ordering of the input data sets can lead to slightly different numerical results or
different convergence behavior. This is a known observation with the used package
\code{lme4}. However, once convergence is achieved, the results are reliable up to
numerical precision.
}
\examples{

library(random.cdisc.data)

ADSL <- radsl(cached = TRUE)
ADQS <- radqs(cached = TRUE) \%>\%
  dplyr::filter(ABLFL != "Y" & ABLFL2 != "Y") \%>\%
  dplyr::mutate(
    AVISIT = as.factor(AVISIT),
    AVISITN = rank(AVISITN) \%>\%
      as.factor() \%>\%
      as.numeric() \%>\%
      as.factor() # making consecutive numeric factor
  )

arm_ref_comp <- list(
  ARMCD = list(
    ref = "ARM A",
    comp = c("ARM B", "ARM C")
  )
)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset("ADQS", ADQS,
      code = 'ADQS <- radqs(cached = TRUE) \%>\%
              dplyr::filter(ABLFL != "Y" & ABLFL2 != "Y") \%>\%
              dplyr::mutate(
                AVISIT = as.factor(AVISIT),
                AVISITN = rank(AVISITN) \%>\%
                  as.factor() \%>\%
                  as.numeric() \%>\%
                  as.factor() # making consecutive numeric factor
              )'
    ),
    check = TRUE
  ),
  modules = root_modules(
    tm_a_mmrm(
      label = "MMRM",
      dataname = 'ADQS',
      response_var = choices_selected(c("AVAL", "CHG"), "AVAL"),
      id_var = choices_selected(c("USUBJID", "SUBJID"), "USUBJID"),
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARMCD"),
      visit_var = choices_selected(c("AVISIT", "AVISITN"), "AVISIT"),
      arm_ref_comp = arm_ref_comp,
      paramcd = choices_selected(
        choices = value_choices(ADQS, "PARAMCD", "PARAM"),
        selected = "FKSI-FWB"
      ),
      covariate_vars = choices_selected(c("BASE", "AGE", "SEX", "BASE:AVISIT"), NULL),
      conf_level = choices_selected(c(0.95, 0.9, 0.8), 0.95)
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}
}
