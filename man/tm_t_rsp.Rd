% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_rsp.R
\name{tm_t_rsp}
\alias{tm_t_rsp}
\title{Response Table Teal Module}
\usage{
tm_t_rsp(
  label,
  dataname,
  parent_name = ifelse(test = is(arm_var, "data_extract_spec"), yes =
    datanames_input(arm_var), no = "ADSL"),
  arm_var,
  arm_ref_comp = NULL,
  paramcd,
  strata_var,
  avalc_var = choices_selected(variable_choices(dataname, "AVALC"), "AVALC", fixed =
    TRUE),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character}) menu item label of the module in the teal app}

\item{dataname}{(\code{character}) analysis data used in teal module, needs to be available in
the list passed to the \code{data} argument of \code{\link[teal]{init}}.
Note that the data is expected to be in vertical form with the
\code{PARAMCD} variable filtering to one observation per patient.}

\item{parent_name}{(\code{character}) name of \code{ADSL} dataset used in the analysis.}

\item{arm_var}{(\code{\link[teal]{choices_selected}} or \code{data_extract_spec}) object with all available choices
and preselected option for variable names that can be used as \code{arm_var}}

\item{arm_ref_comp}{(\code{named list of \link[teal]{choices_selected}}) optional, if specified it must be a named
list with each element corresponding to an arm variable in \code{ADSL} and the element must
be another list with the elements named \code{ref} and \code{comp} that the
defined the default reference and comparison arms when the arm variable is
changed.}

\item{paramcd}{(\code{\link[teal]{choices_selected}} or \code{data_extract_spec}) object with all available choices
and preselected option for variable names that can be used as \code{PARAMCD} variable}

\item{strata_var}{(\code{\link[teal]{choices_selected}} or \code{data_extract_spec}) object with all available
choices and preselected option for variable names that can be used for stratification}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\value{
an \code{\link[teal:module]{teal::module()}} object
}
\description{
This module produces a response summary table that matches the
STREAM template \code{rspt01}.
}
\details{
Additional standard UI inputs include \code{responders},
\code{ref_arm}, \code{comp_arm} and \code{combine_arm} (default FALSE)

Default values of the inputs \code{var_arm}, \code{ref_arm} and
\code{comp_arm} are set to NULL, and updated accordingly based on selection
of \code{paramcd} and \code{var_arm}

This display order of response categories in partitioned statistics section
inherits the factor level order of the source data. Use
\code{\link[base:factor]{base::factor()}} and its \code{levels} argument to manipulate
the source data in order to include/exclude or re-categorize response
categories and arrange the display order. If response categories are
"Missing" or "Not Evaluable (NE)" or "Missing or unevaluable", 95\\%
confidence interval will not be calculated.

Reference arms automatically combined if multiple arms selected as
reference group.
}
\examples{

library(random.cdisc.data)
library(dplyr)

ADSL <- radsl(cached = TRUE) \%>\%
  mutate(Dum_ARM = factor(rep("Single ARM", nrow(.))))
ADRS <- radrs(cached = TRUE) \%>\%
  mutate(Dum_ARM = factor(rep("Single ARM", nrow(.))))

arm_ref_comp = list(
  ACTARMCD = list(
    ref = "ARM B",
    comp = c("ARM A", "ARM C")
  ),
  ARM = list(
    ref = "B: Placebo",
    comp = c("A: Drug X", "C: Combination")
  )
)

app <- init(
  data = cdisc_data(
    cdisc_dataset(
      dataname = "ADSL", data = ADSL, code =
        "ADSL <- radsl(cached = TRUE) \%>\%
           mutate(Dum_ARM = factor(rep(\"Single ARM\", nrow(.))))"
    ),
    cdisc_dataset(
      dataname = "ADRS", data = ADRS, code =
        "ADRS <- radrs(cached = TRUE) \%>\%
          mutate(Dum_ARM = factor(rep(\"Single ARM\", nrow(.))))"
    )
  ),
  modules = root_modules(
    tm_t_rsp(
      label = "Responders",
      dataname = "ADRS",
      paramcd = choices_selected(
        choices = value_choices(ADRS, "PARAMCD", "PARAM"),
        selected = "BESRSPI"
      ),
      arm_var = choices_selected(
        choices = variable_choices(ADRS, c("ARM", "ARMCD", "ACTARMCD", "Dum_ARM")),
        selected = "ARM"
      ),
      arm_ref_comp = arm_ref_comp,
      strata_var = choices_selected(
        choices = variable_choices(ADRS, c("SEX", "BMRKR2")),
        select = NULL
      )
    )
  )
)

\dontrun{
shinyApp(ui = app$ui, server = app$server)
}

}
