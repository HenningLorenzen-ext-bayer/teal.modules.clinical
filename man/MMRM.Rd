% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_a_mmrm.R
\name{MMRM}
\alias{MMRM}
\alias{template_fit_mmrm}
\alias{template_mmrm_tables}
\alias{template_mmrm_plots}
\alias{tm_a_mmrm}
\title{Teal module for Mixed Model Repeated Measurements (MMRM) analysis.}
\usage{
template_fit_mmrm(
  parentname,
  dataname,
  paramcd,
  aval_var,
  arm_var,
  ref_arm,
  comp_arm = NULL,
  combine_comp_arms = FALSE,
  id_var,
  visit_var,
  cov_var,
  conf_level = 0.95,
  cor_struct = "unstructured",
  weights_emmeans = "proportional",
  optimizer = "automatic",
  parallel = FALSE
)

template_mmrm_tables(
  fit_name,
  colcounts_name,
  arm_var,
  ref_arm,
  visit_var,
  show_relative = c("increase", "reduction", "none")
)

template_mmrm_plots(
  fit_name,
  lsmeans_plot = list(select = c("estimates", "contrasts"), width = 0.6, show_pval =
    FALSE),
  diagnostic_plot = list(type = "fit-residual", z_threshold = NULL)
)

tm_a_mmrm(
  label,
  dataname,
  aval_var,
  id_var,
  arm_var,
  visit_var,
  cov_var,
  arm_ref_comp = NULL,
  paramcd,
  conf_level,
  plot_height = c(700L, 200L, 2000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{parentname}{(\code{string})\cr parent analysis data used in teal module,
usually this refers to \code{"ADSL"}.}

\item{dataname}{(\code{string})\cr analysis data used in teal module.}

\item{paramcd}{(\code{string} or \code{choices_selected} with teal module)\cr
variable value designating the studied parameter.}

\item{aval_var}{(\code{string} or \code{choices_selected} with teal module)\cr
name of the variable for the analysis.}

\item{arm_var}{(\code{string} or \code{choices_selected} with teal module)\cr
variable names designating the study arm.}

\item{ref_arm}{(\code{string})\cr the level of reference arm in case of
arm comparison.}

\item{comp_arm}{comparison arms}

\item{combine_comp_arms}{(\code{flag})\cr triggers the combination of comparison arms.}

\item{id_var}{(\code{choices_selected} with teal module)\cr object specifying the
variable name for subject id.}

\item{visit_var}{\link[teal:choices_selected]{teal::choices_selected} object with all available choices and preselected option
for variable names that can be used as \code{visit} variable. Must be a factor in \code{dataname}.}

\item{cov_var}{(\code{string} or \code{choices_selected} with teal module)\cr
names of the variables for covariates.}

\item{conf_level}{(\code{proportion})\cr confidence level of the interval.
Default is 0.95.}

\item{cor_struct}{a string specifying the correlation structure, defaults to
\code{"unstructured"}. See the details.}

\item{weights_emmeans}{argument from \code{\link[emmeans]{emmeans}}, "proportional" by default.}

\item{optimizer}{a string specifying the optimization algorithm which should be used. By default, "automatic"
will (if necessary) try all possible optimization algorithms and choose the best result. If another algorithm
is chosen and does not give a valid result, an error will occur.}

\item{parallel}{flag that controls whether "automatic" optimizer search can use available free cores on the
machine (not default).}

\item{fit_name}{name of fitted MMRM object}

\item{colcounts_name}{name of column counts for MMRM LS means table}

\item{show_relative}{should the "reduction" (\code{control - treatment}, default) or the "increase"
(\code{treatment - control}) be shown for the relative change from baseline}

\item{lsmeans_plot}{a \code{list} of controls for LS means plot. See more \link[tern:g_mmrm_lsmeans]{tern::g_mmrm_lsmeans}}

\item{diagnostic_plot}{a \code{list} of controls for diagnostic_plot. See more \link[tern:g_mmrm_diagnostic]{tern::g_mmrm_diagnostic}}

\item{label}{(\code{character})\cr menu item label of the module in the teal app}

\item{arm_ref_comp}{(\code{choices_selected}, optional)\cr
returned by \link[teal:choices_selected]{teal::choices_selected}. If specified it must be a named list
with each element corresponding to an arm variable in \code{ADSL} and the
element must be another list with the elements named \code{ref} and \code{comp}
that the defined the default reference and comparison arms when the arm
variable is changed.}

\item{plot_height}{\code{numeric} vector to indicate default value, minimum and maximum values.}

\item{plot_width}{\code{numeric} vector to indicate default value, minimum and maximum values.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Teal module for Mixed Model Repeated Measurements (MMRM) analysis.
}
\section{Functions}{
\itemize{
\item \code{template_fit_mmrm}: Creates a fit object for MMRM analysis.

\item \code{template_mmrm_tables}: Create MMRM tables from a fitted MMRM object

\item \code{template_mmrm_plots}: Create MMRM plots from a fitted MMRM object

\item \code{tm_a_mmrm}: teal module for MMRM.
}}

\note{
The ordering of the input data sets can lead to slightly different numerical results or
different convergence behavior. This is a known observation with the used package
\code{lme4}. However, once convergence is achieved, the results are reliable up to
numerical precision.
}
\examples{

library(random.cdisc.data)

ADSL <- radsl(cached = TRUE)
ADQS <- radqs(cached = TRUE) \%>\%
  dplyr::filter(ABLFL != "Y" & ABLFL2 != "Y") \%>\%
  dplyr::filter(AVISIT \%in\% c("WEEK 1 DAY 8", "WEEK 2 DAY 15", "WEEK 3 DAY 22")) \%>\%
  dplyr::mutate(
    AVISIT = as.factor(AVISIT),
    AVISITN = rank(AVISITN) \%>\%
      as.factor() \%>\%
      as.numeric() \%>\%
      as.factor() # making consecutive numeric factor
  )

arm_ref_comp <- list(
  ARMCD = list(
    ref = "ARM A",
    comp = c("ARM B", "ARM C")
  )
)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset("ADQS", ADQS,
      code = 'ADQS <- radqs(cached = TRUE) \%>\%
              dplyr::filter(ABLFL != "Y" & ABLFL2 != "Y") \%>\%
              dplyr::filter(AVISIT \%in\% c("WEEK 1 DAY 8", "WEEK 2 DAY 15", "WEEK 3 DAY 22")) \%>\%
              dplyr::mutate(
                AVISIT = as.factor(AVISIT),
                AVISITN = rank(AVISITN) \%>\%
                  as.factor() \%>\%
                  as.numeric() \%>\%
                  as.factor() # making consecutive numeric factor
              )'
    ),
    check = TRUE
  ),
  modules = root_modules(
    tm_a_mmrm(
      label = "MMRM",
      dataname = 'ADQS',
      aval_var = choices_selected(c("AVAL", "CHG"), "AVAL"),
      id_var = choices_selected(c("USUBJID", "SUBJID"), "USUBJID"),
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARMCD"),
      visit_var = choices_selected(c("AVISIT", "AVISITN"), "AVISIT"),
      arm_ref_comp = arm_ref_comp,
      paramcd = choices_selected(
        choices = value_choices(ADQS, "PARAMCD", "PARAM"),
        selected = "FKSI-FWB"
      ),
      cov_var = choices_selected(c("BASE", "AGE", "SEX", "BASE:AVISIT"), NULL),
      conf_level = choices_selected(c(0.95, 0.9, 0.8), 0.95)
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}
}
