% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_patient_profile.R
\name{tm_g_patient_profile}
\alias{tm_g_patient_profile}
\title{Teal Module: Patient Profile Teal Module}
\usage{
tm_g_patient_profile(
  label,
  dataname,
  parentname = "ADSL",
  patient_id,
  binf_vars = NULL,
  mhterm = NULL,
  mhbodsys = NULL,
  atirel = NULL,
  medname_decoding = NULL,
  paramcd = NULL,
  vitals_xaxis = NULL,
  aval = NULL,
  ae_term = NULL,
  ae_tox_grade = NULL,
  ae_causality = NULL,
  ae_outcome = NULL,
  ae_action = NULL,
  ae_time = NULL,
  ae_decod = NULL,
  cmindc = NULL,
  cmdose = NULL,
  cmtrt = NULL,
  cmdosu = NULL,
  cmroute = NULL,
  cmdosfrq = NULL,
  cmstdy = NULL,
  cmendy = NULL,
  plot_height = c(700L, 200L, 2000L),
  plot_width = c(900L, 200L, 2000L),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character})\cr
menu item label of the module in the teal app}

\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{parentname}{(\code{character})\cr
parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{patient_id}{(\verb{choices selected} or \code{data_extract_input})\cr patient ID column to be used.}

\item{binf_vars}{(\verb{choices selected} or \code{data_extract_input})\cr ADSL columns to be shown in Basic Info tab.}

\item{mhterm}{(\verb{choices selected} or \code{data_extract_input})\cr \code{MHTERM} column of the ADMH dataset.}

\item{mhbodsys}{(\verb{choices selected} or \code{data_extract_input})\cr \code{MHBODSYS} column of the ADMH dataset.}

\item{atirel}{(\verb{choices selected} or \code{data_extract_input})\cr \code{ATIREL} column of the ADCM dataset.}

\item{medname_decoding}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMDECOD} column of the ADCM dataset.}

\item{paramcd}{(\verb{choices selected} or \code{data_extract_input})\cr \code{PARAMCD} column of the ADVS dataset.}

\item{vitals_xaxis}{(\verb{choices selected} or \code{data_extract_input})\cr
Time variable to be represented in the vitals plot x-axis.}

\item{aval}{(\verb{choices selected} or \code{data_extract_input})\cr \code{AVAL} column of the ADVS dataset.}

\item{ae_term}{(\verb{choices selected} or \code{data_extract_input})\cr \code{AETERM} column of the ADAE dataset.}

\item{ae_tox_grade}{(\verb{choices selected} or \code{data_extract_input})\cr \code{AETOXGR} column of the ADAE dataset.}

\item{ae_causality}{(\verb{choices selected} or \code{data_extract_input})\cr \code{AEREL} column of the ADAE dataset.}

\item{ae_outcome}{(\verb{choices selected} or \code{data_extract_input})\cr \code{AEOUT} column of the ADAE dataset.}

\item{ae_action}{(\verb{choices selected} or \code{data_extract_input})\cr \code{AEACN} column of the ADAE dataset.}

\item{ae_time}{(\verb{choices selected} or \code{data_extract_input})\cr \code{ASTDY} column of the ADAE dataset.}

\item{ae_decod}{(\verb{choices selected} or \code{data_extract_input})\cr \code{AEDECOD} column of the ADAE dataset.}

\item{cmindc}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMINDC} column of the ADCM dataset.}

\item{cmdose}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMDOSE} column of the ADCM dataset.}

\item{cmtrt}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMTRT} column of the ADCM dataset.}

\item{cmdosu}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMDOSU} column of the ADCM dataset.}

\item{cmroute}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMROUTE} column of the ADCM dataset.}

\item{cmdosfrq}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMDOSFRQ} column of the ADCM dataset.}

\item{cmstdy}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMSTDY} column of the ADCM dataset.}

\item{cmendy}{(\verb{choices selected} or \code{data_extract_input})\cr \code{CMENDY} column of the ADCM dataset.}

\item{plot_height}{optional, (\code{numeric})\cr
a vector of length three with \code{c(value, min, max)}. Specifies the height of
the main plot and renders a slider on the plot to interactively adjust the plot
height.}

\item{plot_width}{optional, (\code{numeric})\cr
a vector of length three with \code{c(value, min, max)}. Specifies the width of
the main plot and renders a slider on the plot to interactively adjust the plot
width.}

\item{pre_output}{optional, (\code{shiny.tag})\cr
with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{optional, (\code{shiny.tag})\cr
with text placed after the output to put the output into context. For example
the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}
}
\description{
This teal module produces a patient profile report using ADaM datasets.
}
\examples{

library(random.cdisc.data)
library(dplyr)
ADSL <- radsl(cached = TRUE)
ADMH <- radmh(cached = TRUE)
ADAE <- radae(cached = TRUE)
ADCM <- radcm(cached = TRUE)
ADVS <- radvs(cached = TRUE)

# Modify ADCM
ADCM$CMINDC <- ADCM$CMCAT
ADCM$CMDECOD <- ADCM$CMCAT
ADCM$CMDOSE <- 1
ADCM$CMTRT <- ADCM$CMCAT
ADCM$CMDOSU <- "U"
ADCM$CMROUTE <- "CMROUTE"
ADCM$CMDOSFRQ <- "CMDOSFRQ"
ADCM$CMSTDY <- 1
ADCM[ADCM$CMCAT == "medcl B", ]$CMSTDY <- 20
ADCM[ADCM$CMCAT == "medcl C", ]$CMSTDY <- 150
ADCM$CMENDY <- 500
ADCM[ADCM$CMCAT == "medcl B", ]$CMENDY <- 700
ADCM[ADCM$CMCAT == "medcl C", ]$CMENDY <- 1000

ids <- unique(ADSL$USUBJID)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset("ADAE", ADAE, code = "ADAE <- radae(cached = TRUE)"),
    cdisc_dataset("ADMH", ADMH, code = "ADMH <- radmh(cached = TRUE)"),
    cdisc_dataset("ADCM", ADCM, code = "ADCM <- radcm(cached = TRUE)
                  ADCM$CMINDC <- ADCM$CMCAT
                  ADCM$CMDECOD <- ADCM$CMCAT
                  ADCM$CMDOSE <- 1
                  ADCM$CMTRT <- ADCM$CMCAT
                  ADCM$CMDOSU <- 'U'
                  ADCM$CMROUTE <- 'CMROUTE'
                  ADCM$CMDOSFRQ <- 'CMDOSFRQ'
                  ADCM$CMSTDY <- 1
                  ADCM[ADCM$CMCAT == 'medcl B' ,]$CMSTDY <- 20
                  ADCM[ADCM$CMCAT == 'medcl C' ,]$CMSTDY <- 150
                  ADCM$CMENDY <- 500
                  ADCM[ADCM$CMCAT == 'medcl B' ,]$CMENDY <- 700
                  ADCM[ADCM$CMCAT == 'medcl C' ,]$CMENDY <- 1000
                  "),
    cdisc_dataset("ADVS", ADVS, code = "ADVS <- radvs(cached = TRUE)"),
    check = TRUE
  ),
  modules = root_modules(
    tm_g_patient_profile(
      label = "Patient Profile",
      dataname = "ADSL",
      parentname = "ADSL",
      plot_height = c(600L, 200L, 2000L),
      patient_id = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = ids,
          selected = ids[1],
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      binf_vars = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = variable_choices(ADSL),
          selected = c("ARM", "AGE", "SEX", "COUNTRY", "RACE", "EOSSTT"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      mhterm = data_extract_spec(
        dataname = "ADMH",
        select = select_spec(
          choices = variable_choices(ADMH, c("MHTERM")),
          selected = c("MHTERM"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      mhbodsys = data_extract_spec(
        dataname = "ADMH",
        select = select_spec(
          choices = variable_choices(ADMH, "MHBODSYS"),
          selected = c("MHBODSYS"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      paramcd = data_extract_spec(
        dataname = "ADVS",
        select = select_spec(
          choices = variable_choices(ADVS, "PARAMCD"),
          selected = c("PARAMCD"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      vitals_xaxis = data_extract_spec(
        dataname = "ADVS",
        select = select_spec(
          choices = variable_choices(ADVS, "ADY"),
          selected = c("ADY"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      aval = data_extract_spec(
        dataname = "ADVS",
        select = select_spec(
          choices = variable_choices(ADVS, "AVAL"),
          selected = c("AVAL"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      atirel = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "ATIREL"),
          selected = c("ATIREL"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      medname_decoding = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMDECOD"),
          selected = c("CMDECOD"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmindc = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMINDC"),
          selected = c("CMINDC"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmdose = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMDOSE"),
          selected = c("CMDOSE"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmtrt = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMTRT"),
          selected = c("CMTRT"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmdosu = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMDOSU"),
          selected = c("CMDOSU"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmroute = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMROUTE"),
          selected = c("CMROUTE"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmdosfrq = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMDOSFRQ"),
          selected = c("CMDOSFRQ"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmstdy = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMSTDY"),
          selected = c("CMSTDY"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      cmendy = data_extract_spec(
        dataname = "ADCM",
        select = select_spec(
          choices = variable_choices(ADCM, "CMENDY"),
          selected = c("CMENDY"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      ae_term = data_extract_spec(
        dataname = "ADAE",
        select = select_spec(
          choices = variable_choices(ADAE, "AETERM"),
          selected = c("AETERM"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      ae_tox_grade = data_extract_spec(
        dataname = "ADAE",
        select = select_spec(
          choices = variable_choices(ADAE, "AETOXGR"),
          selected = c("AETOXGR"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      ae_causality = data_extract_spec(
        dataname = "ADAE",
        select = select_spec(
          choices = variable_choices(ADAE, "AEREL"),
          selected = c("AEREL"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      ae_outcome = data_extract_spec(
        dataname = "ADAE",
        select = select_spec(
          choices = variable_choices(ADAE, "AEOUT"),
          selected = c("AEOUT"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      ae_action = data_extract_spec(
        dataname = "ADAE",
        select = select_spec(
          choices = variable_choices(ADAE, "AEACN"),
          selected = c("AEACN"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      ae_time = data_extract_spec(
        dataname = "ADAE",
        select = select_spec(
          choices = variable_choices(ADAE, "ASTDY"),
          selected = c("ASTDY"),
          multiple = TRUE,
          fixed = FALSE
        )
      ),
      ae_decod = NULL
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}

}
