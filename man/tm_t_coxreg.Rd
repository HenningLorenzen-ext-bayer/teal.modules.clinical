% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_coxreg.R
\name{tm_t_coxreg}
\alias{tm_t_coxreg}
\title{Cox Multiple Regression Model}
\usage{
tm_t_coxreg(
  label,
  dataname,
  arm_var,
  arm_ref_comp = NULL,
  paramcd,
  cov_var,
  strata_var,
  conf_level = choices_selected(c(0.8, 0.85, 0.9, 0.95, 0.99, 0.995), 0.95, keep_order =
    TRUE),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{Menu item label of the module in the teal app.}

\item{dataname}{\code{character} analysis data used in teal module, needs to be
available in the list passed to the \code{data} argument of
\code{\link[teal]{init}}. Note that the data is expected to be in vertical
form with the \code{PARAMCD} variable filtering to one observation per patient.}

\item{arm_var}{\code{\link[teal]{choices_selected}} object with all available
choices and preselected option for variable names that can be used as
\code{arm_var}}

\item{arm_ref_comp}{(\code{\link[teal]{choices_selected}}) optional, if
specified it must be a named list with each element corresponding to an arm
variable in \code{ADSL} and the element must be another list with the elements
named \code{ref} and \code{comp} that the defined the default reference and
comparison arms when the arm variable is changed.}

\item{paramcd}{\code{\link[teal]{choices_selected}} object with all available
choices and preselected option for variable names that can be used as
\code{PARAMCD} variable.}

\item{cov_var}{\code{\link[teal]{choices_selected}} object with all available
choices and preselected option for variable names that can be used as
covariates in the model.}

\item{strata_var}{\code{\link[teal]{choices_selected}} object with all
available choices and preselected option for variable names that can be
used for stratification}

\item{conf_level}{\code{\link[teal]{choices_selected}} object with all
available choices and preselected option for variable names that can be
used for confidence level for computation of the confidence intervals.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Teal module to program the simple effects of a multi-variable Cox regression
models such as: \code{Surv(time, event) ~ Arm + Cov1 + ... }.
This provides the \code{COXT02} standard output.
}
\details{
This modules expects that the analysis data has the following variables

\tabular{ll}{
\code{AVAL} \tab time to event\cr
\code{CNSR} \tab boolean or 0,1 is element in \code{AVAL} censored\cr
\code{PARAMCD} \tab variable used to filter for endpoint (e.g. OS), after
filtering for \code{paramcd} one observation per patient is expected
}

The arm variables, stratification and covariate variables are taken from the
\code{ADSL} data.
}
\section{Note}{

The likelihood ratio test is not supported for model including strata,
Wald test will be substituted.
}

\examples{
library(random.cdisc.data)

ADSL  <- radsl(cached = TRUE)
ADTTE <- radtte(cached = TRUE)
arm_ref_comp = list(
  ACTARMCD = list(
    ref = "ARM B",
    comp = c("ARM A", "ARM C")
  ),
  ARM = list(
    ref = "B: Placebo",
    comp = c("A: Drug X", "C: Combination")
  )
)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    cdisc_dataset("ADTTE", ADTTE),
    code = "ADSL  <- radsl(cached = TRUE);  ADTTE <- radtte(cached = TRUE)"
  ),
  modules = root_modules(
    tm_t_coxreg(
      label = "Cox Reg.",
      dataname = "ADTTE",
      arm_var = choices_selected(c("ARM", "ARMCD", "ACTARMCD"), "ARM"),
      arm_ref_comp = arm_ref_comp,
      paramcd = choices_selected(value_choices(ADTTE, "PARAMCD", "PARAM"), "OS"),
      strata_var = choices_selected(c("COUNTRY", "STRATA1", "STRATA2"), "STRATA1"),
      cov_var    = choices_selected(
        c("AGE", "BMRKR1", "BMRKR2", "REGION1"), "AGE"
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
