% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_events_summary.R
\name{tm_t_events_summary}
\alias{tm_t_events_summary}
\title{Adverse Events Summary Teal Module}
\usage{
tm_t_events_summary(
  label,
  dataname,
  arm_var,
  add_total = TRUE,
  flag_var_anl = NULL,
  flag_var_aesi = NULL,
  count_subj = TRUE,
  count_pt = FALSE,
  count_events = FALSE
)
}
\arguments{
\item{label}{menu item label of the module in the teal app}

\item{dataname}{(\code{character}) analysis data used in teal module, needs to be available in
the list passed to the \code{data} argument of \code{\link[teal]{init}}.}

\item{arm_var}{\code{\link[teal]{choices_selected}} object with all available choices and preselected option
for variable names that can be used as \code{arm_var}}

\item{add_total}{(\code{logical}) optional, whether show column with total number of patients}

\item{flag_var_anl}{vector with names of flag variables from \code{dataset} to count adverse
event sub-groups (e.g. Serious events, Related events, etc.). All flag variables must be of type
\code{logical}. If a variable has a label attribute then it will be used as a table row name.}

\item{flag_var_aesi}{vector with names of flag variables from \code{dataset} to count adverse
event special interest groups. All flag variables must be of type \code{logical}. If a variable
has a label attribute then it will be used as a table row name.}

\item{count_subj}{\code{(logical)} whether to show count of unique subjects based on \code{USUBJID}.
Only applies if event flag variables are provided.}

\item{count_pt}{whether to show count of unique preferred terms based on \code{AEDECOD}.
Only applies if event flag variables are provided.}

\item{count_events}{whether to show count of events. Only applies if event flag variables are provided.}
}
\value{
an \code{\link[teal]{module}} object
}
\description{
This module produces an Adverse Event summary table that matches the
  STREAM template \code{AET01}.
}
\details{
This module should be used to produce summaries based only on events-level dataset (e.g. \code{ADAE}).
For tabulation of variables from subject-level datasets like \code{ADSL}, use \code{\link{tm_t_summary}}.
}
\examples{

# save the code below in a file app.R in order to use get_code() functionality
# by uncommenting code = get_code("app.R")).

library(random.cdisc.data)
library(dplyr)

ADSL <- radsl(cached = TRUE)
ADAE <- radae(cached = TRUE)

# define analysis subgroups from ADAE
add_event_flags <- function(dat){
  dat \%>\%
    dplyr::mutate(
      TMPFL_SER = AESER == "Y",
      TMPFL_REL = AEREL == "Y",
      TMPFL_GR5 = AETOXGR == "5",
      TMP_SMQ01 = AEDECOD \%in\% c("dcd B.2.1.2.1", "dcd C.2.1.2.1"),
      TMP_CQ01 = AEDECOD \%in\% c("dcd D.1.1.1.1", "dcd A.1.1.1.2")
    ) \%>\%
    rtables::var_relabel(
      TMPFL_SER = "Serious AE",
      TMPFL_REL = "Related AE",
      TMPFL_GR5 = "Grade 5 AE",
      TMP_SMQ01 = "B.2.1.2.1/C.2.1.2.1 (SMQ) (broad)",
      TMP_CQ01 = "AESI D1.A1"
    )
 }

 ADAE <- ADAE \%>\%
   add_event_flags()


anl_vars <- names(ADAE)[startsWith(names(ADAE), "TMPFL_")]
aesi_vars <- names(ADAE)[startsWith(names(ADAE), "TMP_SMQ") | startsWith(names(ADAE), "TMP_CQ")]

app <- teal::init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset("ADAE", ADAE,
      code = "ADAE <- radae(cached = TRUE)
              add_event_flags <- function(dat){
              dat \%>\%
                dplyr::mutate(
                  TMPFL_SER = AESER == 'Y',
                  TMPFL_REL = AEREL == 'Y',
                  TMPFL_GR5 = AETOXGR == '5',
                  TMP_SMQ01 = AEDECOD \%in\% c('dcd B.2.1.2.1', 'dcd C.2.1.2.1'),
                  TMP_CQ01 = AEDECOD \%in\% c('dcd D.1.1.1.1', 'dcd A.1.1.1.2')
                ) \%>\%
                var_relabel(
                  TMPFL_SER = 'Serious AE',
                  TMPFL_REL = 'Related AE',
                  TMPFL_GR5 = 'Grade 5 AE',
                  TMP_SMQ01 = 'B.2.1.2.1/C.2.1.2.1 (SMQ) (broad)',
                  TMP_CQ01 = 'AESI D1.A1'
                )
              }
           ADAE <- ADAE \%>\%
             add_event_flags()"
      ),
    check = TRUE
  ),
  modules = root_modules(
    tm_t_events_summary(
      label = "Adverse Event Summary",
      dataname = "ADAE",
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
      flag_var_anl = anl_vars,
      flag_var_aesi = aesi_vars,
      add_total = TRUE
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}
}
