% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_summary_by.R
\name{summary_by}
\alias{summary_by}
\alias{template_summary_by}
\alias{tm_t_summary_by}
\title{Teal Module: Summarize Variables by Row Groups Module}
\usage{
template_summary_by(
  parentname,
  dataname,
  arm_var,
  sum_vars,
  by_vars,
  var_labels = character(),
  parallel_vars = FALSE,
  row_groups = FALSE,
  add_total = FALSE,
  na.rm = FALSE,
  denominator = c("N", "n", "omit")
)

tm_t_summary_by(
  label,
  dataname,
  parent_name = ifelse(is(arm_var, "data_extract_spec"), datanames_input(arm_var),
    "ADSL"),
  arm_var,
  by_vars,
  summarize_vars,
  paramcd = choices_selected("", fixed = TRUE),
  parallel_vars = FALSE,
  row_groups = FALSE,
  useNA = c("ifany", "no"),
  denominator = c("n", "N", "omit"),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{parentname}{(\code{string})\cr parent analysis data used in teal module,
usually this refers to \code{"ADSL"}.}

\item{dataname}{(\code{string})\cr analysis data used in teal module.}

\item{arm_var}{(\code{string} or \code{choices_selected} with teal module)\cr
variable names designating the study arm.}

\item{sum_vars}{(\code{character})\cr names of the variables that should be summarized.}

\item{by_vars}{\code{\link[teal]{choices_selected}} object with all available choices and preselected option
for variable names used to split the summary by rows.}

\item{var_labels}{(named \code{character})\cr optional variable labels for relabeling the analysis variables.}

\item{parallel_vars}{(\code{logical}) used to display \code{summarize_vars} as parallel columns
(\code{FALSE} on default). Can be used only if all chosen analysis variables are numeric.}

\item{row_groups}{(\code{logical}) used to display \code{summarize_vars} as row groups
(\code{FALSE} on default).}

\item{add_total}{(\code{flag})\cr whether to include column with total number of patients.}

\item{na.rm}{(\code{flag})\cr whether \code{NA} values should be removed prior to analysis.}

\item{denominator}{(\code{string})\cr chooses how percentages are calculated.
With option \code{N}, the reference population from the column total is used as
the denominator. With option \code{n}, the number of non-missing records in this row and column
intersection is used as the denominator. If \code{omit} is chosen, then the percentage is omitted.}

\item{label}{(\code{character})\cr menu item label of the module in the teal app}

\item{parent_name}{(\code{string})\cr parent analysis data used in teal module,
usually this refers to \code{"ADSL"}.}

\item{summarize_vars}{(\code{choices_selected})\cr names of the variables
that should be summarized.}

\item{paramcd}{(\code{string} or \code{choices_selected} with teal module)\cr
variable value designating the studied parameter.}

\item{useNA}{(\code{string})\cr choose whether missing data (\code{NA}) should be displayed as a level.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\value{
a \code{\link[teal]{module}} object
}
\description{
Teal Module: Summarize Variables by Row Groups Module
}
\section{Functions}{
\itemize{
\item \code{template_summary_by}: create the expressions corresponding to the analysis
that should be summarized.

\item \code{tm_t_summary_by}: teal module function to generate the required summary by row
groups module.
}}

\examples{
library(random.cdisc.data)
adsl <- radsl(cached = TRUE)
adlb <- radlb(cached = TRUE)
app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl, code = 'ADSL <- radsl(cached = TRUE)'),
    cdisc_dataset("ADLB", adlb, code = 'ADLB <- radlb(cached = TRUE)'),
    check = TRUE
  ),
  modules = root_modules(
    tm_t_summary_by(
      label = "Summary by Row Groups Table",
      dataname = "ADLB",
      arm_var = choices_selected(
        choices = variable_choices(adsl, c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      by_vars = choices_selected(
        choices = variable_choices(adlb, c("PARAM", "AVISIT")),
        selected = c("AVISIT")
      ),
      summarize_vars = choices_selected(
        choices = variable_choices(adlb, c("AVAL", "CHG")),
        selected = c("AVAL")
      ),
      denominator = "N",
      useNA = "ifany",
      paramcd = choices_selected(
        choices = value_choices(adlb, "PARAMCD", "PARAM"),
        selected = "ALT"
      )
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}
}
