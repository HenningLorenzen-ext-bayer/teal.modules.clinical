% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_events_summary.R
\name{adverse_events_summary}
\alias{adverse_events_summary}
\alias{template_events_summary}
\alias{tm_t_events_summary}
\title{Teal Module: Adverse Events Summary}
\usage{
template_events_summary(
  anl_name,
  parentname,
  arm_var,
  dthfl_var = "DTHFL",
  dcsreas_var = "DCSREAS",
  flag_var_anl = NULL,
  flag_var_aesi = NULL,
  aeseq_var = "AESEQ",
  llt = "AEDECOD",
  add_total = TRUE,
  count_subj = TRUE,
  count_pt = TRUE,
  count_events = TRUE
)

tm_t_events_summary(
  label,
  dataname,
  parentname = ifelse(is(arm_var, "data_extract_spec"), datanames_input(arm_var),
    "ADSL"),
  arm_var,
  flag_var_anl,
  flag_var_aesi,
  dthfl_var = choices_selected(variable_choices(parentname, "DTHFL"), "DTHFL", fixed =
    TRUE),
  dcsreas_var = choices_selected(variable_choices(parentname, "DCSREAS"), "DCSREAS",
    fixed = TRUE),
  llt = choices_selected(variable_choices(dataname, "AEDECOD"), "AEDECOD", fixed =
    TRUE),
  aeseq_var = choices_selected(variable_choices(dataname, "AESEQ"), "AESEQ", fixed =
    TRUE),
  add_total = TRUE,
  count_subj = TRUE,
  count_pt = TRUE,
  count_events = TRUE
)
}
\arguments{
\item{anl_name}{(\code{string})\cr analysis data used in teal module.}

\item{parentname}{(\code{string})\cr parent analysis data used in teal module,
usually this refers to \code{"ADSL"}.}

\item{arm_var}{(\code{\link[teal]{choices_selected}} or \code{data_extract_spec}) object with all available choices
and preselected option for variable names that can be used as \code{arm_var}.}

\item{dthfl_var}{(\code{choices_selected})\cr variable for subject death flag from
\code{parentname}. Records with `"Y"`` are summarized in the table row for
"Total number of deaths".}

\item{dcsreas_var}{(\code{choices_selected})\cr variable
for study discontinuation reason from \code{parentname}. Records with \code{"ADVERSE EVENTS"} are
summarized in the table row for "Total number of patients withdrawn from study due to an AE".}

\item{flag_var_anl}{(\code{choices_selected})\cr vector with names of flag variables
from \code{dataset} used to count adverse event sub-groups (e.g. Serious events, Related events, etc.).
Variable labels are used as table row names if they exist.}

\item{flag_var_aesi}{(\code{choices_selected})\cr vector with names of flag variables
from \code{dataset} used to count adverse event special interest groups.
All flag variables must be of type \code{logical}. Variable labels are used as table
row names if they exist.}

\item{aeseq_var}{(\code{choices_selected})\cr variable for adverse events sequence number
from \code{dataset}. Used for counting total number of events.}

\item{llt}{(\code{string} or \code{choices_selected} with teal module)\cr
name of the variable with low level term for events.}

\item{add_total}{(\code{flag})\cr whether to include column with total number of patients.}

\item{count_subj}{(\code{flag})\cr whether to show count of unique subjects
based on \code{USUBJID}. Only applies if event flag variables are provided.}

\item{count_pt}{(\code{flag})\cr whether to show count of unique preferred terms based on
\code{llt}. Only applies if event flag variables are provided.}

\item{count_events}{(\code{flag})\cr whether to show count of events based on \code{aeseq_var}.
Only applies if event flag variables are provided.}

\item{label}{(\code{character})\cr menu item label of the module in the teal app}

\item{dataname}{(\code{string})\cr analysis data used in teal module.}
}
\description{
Teal Module: Adverse Events Summary
}
\section{Functions}{
\itemize{
\item \code{template_events_summary}: creates the expression corresponding
to the analysis.

\item \code{tm_t_events_summary}: teal module for adverse events summary.
}}

\examples{
library(dplyr)
library(random.cdisc.data)

adsl <- radsl(cached = TRUE) \%>\%
  mutate(
    DTHFL = case_when(  # nolint
      !is.na(DTHDT) ~ "Y",
      TRUE ~ ""
    )
  ) \%>\%
  rtables::var_relabel(
    DTHFL = "Subject Death Flag"
  )

adae <- radae(cached = TRUE)

add_event_flags <- function(dat) {
  dat \%>\%
    dplyr::mutate(
      TMPFL_SER = AESER == "Y",
      TMPFL_REL = AEREL == "Y",
      TMPFL_GR5 = AETOXGR == "5",
      TMP_SMQ01 = !is.na(SMQ01NAM),
      TMP_SMQ02 = !is.na(SMQ02NAM),
      TMP_CQ01 = !is.na(CQ01NAM)
    ) \%>\%
    rtables::var_relabel(
      TMPFL_SER = "Serious AE",
      TMPFL_REL = "Related AE",
      TMPFL_GR5 = "Grade 5 AE",
      TMP_SMQ01 = aesi_label(adae$SMQ01NAM, adae$SMQ01SC),
      TMP_SMQ02 = aesi_label("Y.9.9.9.9/Z.9.9.9.9 AESI"),
      TMP_CQ01 = aesi_label(adae$CQ01NAM)
    )
}

# Generating user-defined event flags.
adae <- adae \%>\% add_event_flags()

ae_anl_vars <- names(adae)[startsWith(names(adae), "TMPFL_")]
aesi_vars <- names(adae)[startsWith(names(adae), "TMP_")]

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset("ADAE", adae, code = "ADAE <- radae(cached = TRUE)")
    ),
  modules = root_modules(
    tm_t_events_summary(
      label = "Adverse Events Summary",
      dataname = "ADAE",
      arm_var = choices_selected(
        choices = variable_choices("ADSL", c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      flag_var_anl = choices_selected(
        choices = variable_choices("ADAE", ae_anl_vars),
        selected = ae_anl_vars[1],
        keep_order = TRUE,
        fixed = FALSE
      ),
      flag_var_aesi = choices_selected(
        choices = variable_choices("ADAE", aesi_vars),
        selected = aesi_vars[1],
        keep_order = TRUE,
        fixed = FALSE
      ),
      add_total = TRUE
      )
    )
  )
\dontrun{
shinyApp(app$ui, app$server)
}



}
