% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_events_summary.R
\name{adverse_events_summary}
\alias{adverse_events_summary}
\alias{template_events_summary}
\alias{tm_t_events_summary}
\title{Teal Module: Adverse Events Summary}
\usage{
template_events_summary(
  anl_name,
  parent_name,
  arm_var,
  add_total = TRUE,
  flag_var_anl = NULL,
  flag_var_aesi = NULL,
  count_subj = TRUE,
  count_pt = TRUE,
  count_events = TRUE
)

tm_t_events_summary(
  label,
  dataname,
  arm_var,
  add_total = TRUE,
  flag_var_anl = NULL,
  flag_var_aesi = NULL,
  count_subj = TRUE,
  count_pt = TRUE,
  count_events = TRUE
)
}
\arguments{
\item{anl_name}{(\code{string})\cr analysis data used in teal module.}

\item{parent_name}{(\code{string})\cr parent analysis data used in teal module,
usually this refers to \code{"ADSL"}.}

\item{arm_var}{(\code{string} or \code{choices_selected} with teal module)\cr
variable names designating the study arm.}

\item{add_total}{(\code{flag})\cr whether to include column with total number of patients.}

\item{flag_var_anl}{(\code{character})\cr vector with names of flag variables from
\code{dataset} used to count adverse event sub-groups (e.g. Serious events, Related events, etc.).
All flag variables must be of type \code{logical}. If vector is named,
then names will be used as a table row names.}

\item{flag_var_aesi}{(\code{character})\cr vector with names of flag variables from
\code{dataset} used to count adverse event special interest groups. All flag variables
must be of type \code{logical}. If vector is named, then names will be used as a table row names.}

\item{count_subj}{(\code{flag})\cr whether to show count of unique subjects
based on \code{USUBJID}. Only applies if event flag variables are provided.}

\item{count_pt}{(\code{flag})\cr whether to show count of unique preferred terms based on
\code{AEDECOD}. Only applies if event flag variables are provided.}

\item{count_events}{(\code{flag})\cr whether to show count of events.
Only applies if event flag variables are provided.}

\item{label}{(\code{character})\cr menu item label of the module in the teal app}

\item{dataname}{(\code{string})\cr analysis data used in teal module.}
}
\description{
Teal Module: Adverse Events Summary
}
\section{Functions}{
\itemize{
\item \code{template_events_summary}: creates the expression corresponding
to the analysis. Requires that the variables DTHDT and DCSREAS
exist in \code{parent_name} dataset. Similarly, requires that variables
STUDYID, USUBJID, AESEQ and AEDECOD exist in \code{anl_name} dataset.

\item \code{tm_t_events_summary}: teal module for adverse events summary.
}}

\examples{
library(dplyr)
library(random.cdisc.data)

adsl <- radsl(cached = TRUE) \%>\%
  mutate(
    DTHFL = case_when(  # nolint
      !is.na(DTHDT) ~ "Y",
      TRUE ~ ""
    ),
    DCSREAS = as.character(DCSREAS),
    DCSREAS = case_when(  # nolint
      is.na(DCSREAS) ~ "",
      TRUE ~ DCSREAS
    )
  )

adae <- radae(cached = TRUE)

# Helper function for generating user-defined event flags.
extract_aesi_label <- function(flag, scope = NULL) {
  init_lbl <- obj_label(flag)
  flag <- unique(flag)[!is.na(unique(flag))]
  lbl <- if (length(flag) == 1 & !is.null(scope)) {
    scope <- unique(scope)[!is.na(unique(scope))]
    paste0(flag, " (", scope, ")")
  } else if (length(flag) == 1 & is.null(scope)) {
    flag
  } else {
    init_lbl
  }
  lbl
}
add_event_flags <- function(dat) {
  dat \%>\%
    dplyr::mutate(
      TMPFL_SER = AESER == "Y",
      TMPFL_REL = AEREL == "Y",
      TMPFL_GR5 = AETOXGR == "5",
      TMP_SMQ01 = !is.na(SMQ01NAM),
      TMP_SMQ02 = !is.na(SMQ02NAM),
      TMP_CQ01 = !is.na(CQ01NAM)
    ) \%>\%
    rtables::var_relabel(
      TMPFL_SER = "Serious AE",
      TMPFL_REL = "Related AE",
      TMPFL_GR5 = "Grade 5 AE",
      TMP_SMQ01 = extract_aesi_label(adae$SMQ01NAM, adae$SMQ01SC),
      TMP_SMQ02 = extract_aesi_label("Y.9.9.9.9/Z.9.9.9.9 AESI"),
      TMP_CQ01 = extract_aesi_label(adae$CQ01NAM)
    )
}

# Generating user-defined event flags.
adae <- adae \%>\% add_event_flags()

ae_anl_vars <- var_labels(adae, fill = TRUE)[startsWith(names(adae), "TMPFL_")] #nolint
aesi_vars <- var_labels(adae, fill = TRUE)[startsWith(names(adae), "TMP_")] #nolint

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset("ADAE", adae, code = "ADAE <- radae(cached = TRUE)")
    ),
  modules = root_modules(
    tm_t_events_summary(
      label = "Adverse Events Summary",
      dataname = "ADAE",
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
      add_total = TRUE,
      flag_var_anl = ae_anl_vars,
      flag_var_aesi = aesi_vars
      )
    )
  )
\dontrun{
shinyApp(app$ui, app$server)
}



}
