% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_barchart_simple.R
\name{tm_g_barchart_simple}
\alias{tm_g_barchart_simple}
\title{Simple barchart plot that shows counts per category.}
\usage{
tm_g_barchart_simple(
  x = NULL,
  fill = NULL,
  x_facet = NULL,
  y_facet = NULL,
  label = "Count Barchart",
  plot_options = NULL,
  plot_height = c(600L, 200L, 2000L),
  plot_width = NULL
)
}
\arguments{
\item{x}{\code{data_extract_spec} variable on x-axis}

\item{fill}{\code{data_extract_spec} variable on x-axis}

\item{x_facet}{\code{data_extract_spec} variable on x-axis}

\item{y_facet}{\code{data_extract_spec} variable on x-axis}

\item{label}{(\code{character}) menu item label of the module in the teal app}

\item{plot_options}{\code{list} list of plot options}

\item{plot_height}{optional, (\code{numeric}) a vector of length three with \code{c(value, min, max)}. Specifies
the height of the main plot.}

\item{plot_width}{optional, (\code{numeric}) a vector of length three with \code{c(value, min, max)}. Specifies
the width of the main plot and renders a slider on the plot to interactively adjust the plot width.}
}
\description{
Categories can be defined up to four levels deep and are defined through
\code{x}, \code{fill}, \code{x_facet} and \code{y_facet}. If any of them is \code{NULL},
it is ignored.
}
\examples{
library(dplyr)
library(random.cdisc.data)

ADSL <- radsl(cached = TRUE)
ADAE <- radae(cached = TRUE)
ADLB <- radlb(cached = TRUE)

adae_labels <- var_labels(ADAE)
ADAE <- ADAE \%>\% dplyr::filter(!((AETOXGR == 1) & (AESEV == "MILD") & (ARM == "A: Drug X")))

# reinstate labels
ADAE <- do.call(rtables::var_relabel, append(list(x = ADAE), as.list(adae_labels)))


app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset("ADAE", ADAE,
      code = "ADAE <- radae(cached = TRUE)
              adae_labels <- var_labels(ADAE)
              ADAE <- ADAE \%>\%
                dplyr::filter(!((AETOXGR == 1) & (AESEV == 'MILD') & (ARM == 'A: Drug X')))
              ADAE <- do.call(rtables::var_relabel,
                append(list(x = ADAE), as.list(adae_labels)))"),
    cdisc_dataset("ADLB", ADLB, code = "ADLB <- radlb(cached = TRUE)"),
    check = TRUE
  ),
  modules = root_modules(
    tm_g_barchart_simple(
      label = "ADAE Analysis",
      x = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = variable_choices(ADSL,
                                     c("ARM", "ACTARM", "SEX",
                                       "RACE", "ITTFL", "SAFFL", "STRATA2")
          ),
          selected = "ACTARM",
          multiple = FALSE
        )
      ),
      fill = list(
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            choices = variable_choices(ADSL,
                                       c("ARM", "ACTARM", "SEX",
                                         "RACE", "ITTFL", "SAFFL", "STRATA2")
            ),
            selected = "SEX",
            multiple = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADAE",
          select = select_spec(
            choices = variable_choices(ADAE, c("AETOXGR", "AESEV", "AESER")),
            selected = NULL,
            multiple = FALSE
          )
        )
      ),
      x_facet = list(
        data_extract_spec(
          dataname = "ADAE",
          select = select_spec(
            choices = variable_choices(ADAE, c("AETOXGR", "AESEV", "AESER")),
            selected = "AETOXGR",
            multiple = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            choices = variable_choices(ADSL,
                                       c("ARM", "ACTARM", "SEX",
                                         "RACE", "ITTFL", "SAFFL", "STRATA2")
            ),
            selected = NULL,
            multiple = FALSE
          )
        )
      ),
      y_facet = list(
        data_extract_spec(
          dataname = "ADAE",
          select = select_spec(
            choices = variable_choices(ADAE, c("AETOXGR", "AESEV", "AESER")),
            selected = "AESEV",
            multiple = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            choices = variable_choices(ADSL,
                                       c("ARM", "ACTARM", "SEX",
                                         "RACE", "ITTFL", "SAFFL", "STRATA2")
            ),
            selected = NULL,
            multiple = FALSE
          )
        )
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}

}
